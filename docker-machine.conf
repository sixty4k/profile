dmr() {
    docker-machine stop default
    docker-machine start default && \
    docker-machine regenerate-certs -f default && \
    docker-machine-nfs default --nfs-config="-alldirs -mapall=501:20" --mount-opts="async,noatime,actimeo=1,nolock,vers=3,udp"  && \
    docker-machine regenerate-certs -f default && \
    eval $(docker-machine env default)
}

dme() {
    eval $(docker-machine env default)
}

burndm() {
    docker-machine rm default
    docker-machine create --driver vmwarefusion --vmwarefusion-disk-size 60000 --vmwarefusion-memory-size 2048 -vmwarefusion-cpu-count 2 --engine-opt bip=172.17.42.1/24 --engine-opt max-concurrent-downloads=1 default
#    docker-machine-nfs default --nfs-config="-alldirs -mapall=501:20" --mount-opts="async,noatime,actimeo=1,nolock,vers=3,udp"  && \
    docker-machine regenerate-certs -f default && \
    eval $(docker-machine env default)
}

dmroute() {
    if docker-machine ls default | grep Running &>/dev/null; then
        # load the docker-machine environment
        eval "$(docker-machine env default)" &>/dev/null

        # establish a tunnel between Mac and docker host
        sudo route -n delete -net 172.17.0.0 $(docker-machine ip default)
        sudo route -n add -net 172.17.0.0 $(docker-machine ip default)

        # Restart the Mac's internal DNSResponder. This solves the following issue:
        # when dnsdock is down for a long time, the Mac's DNSResponder stops using dnsdock
        # to resolve hostnames, and any `dev.lytmus.com` URL becomes unresolvable by the Mac.
        sudo killall -HUP mDNSResponder

        # make the docker host accessible by Mac at 'host.dev.lytmus.com'
        sudo sed -i '' '/[[:space:]]host\.dev\.lytmus\.io$/d' /etc/hosts
        export DOCKER_IP="$(docker-machine ip default)"
        sudo /bin/bash -c "echo \"${DOCKER_IP}    host.dev.lytmus.com\" >> /etc/hosts"
    else
        echo "Start your docker-machine host: docker-machine start default"
    fi
}
